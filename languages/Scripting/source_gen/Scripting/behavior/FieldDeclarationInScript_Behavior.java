package Scripting.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.core.behavior.ScopeProvider_Behavior;

public class FieldDeclarationInScript_Behavior {
  public static void init(SNode thisNode) {
  }

  public static Scope virtual_getScope_3734116213129936182(final SNode thisNode, SNode kind, SNode child) {
    if (SConceptOperations.isSubConceptOf(kind, "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration")) {
      SNode script = SNodeOperations.getAncestor(thisNode, "Scripting.structure.Script", false, false);
      return Script_Behavior.call_createScope_6240804956234810155(script, Sequence.fromIterable(Script_Behavior.call_retrieveStaticMethodDeclarations_6240804956234706787(script)).concat(Sequence.fromIterable(Script_Behavior.call_retrieveInstanceMethodDeclarations_6240804956234799549(script))));
    } else if (SConceptOperations.isSubConceptOf(kind, "jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration")) {
      SNode script = SNodeOperations.getAncestor(thisNode, "Scripting.structure.Script", false, false);
      return Script_Behavior.call_createScope_6240804956234810155(script, Sequence.fromIterable(Script_Behavior.call_retrieveStaticFieldDeclarations_6240804956234802612(script)).concat(Sequence.fromIterable(Script_Behavior.call_retrieveFields_6240804956234829751(script)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SNodeOperations.getIndexInParent(it) < SNodeOperations.getIndexInParent(thisNode);
        }
      }).select(new ISelector<SNode, SNode>() {
        public SNode select(SNode it) {
          return SLinkOperations.getTarget(SNodeOperations.cast(it, "Scripting.structure.FieldDeclarationInScript"), "declaration", true);
        }
      })));
    }

    return ScopeProvider_Behavior.callSuper_getScope_3734116213129936182(thisNode, "Scripting.structure.FieldDeclarationInScript", kind, child);
  }
}
